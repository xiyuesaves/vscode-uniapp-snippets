{
    "uni-Base64转ArrayBuffer": {
        "prefix": "uni.base64ToArrayBuffer()",
        "body": [
            "uni.base64ToArrayBuffer(${1:base64});$0"
        ],
        "description": "uni-Base64转ArrayBuffer"
    },
    "uni-ArrayBuffer转Base64": {
        "prefix": "uni.arrayBufferToBase64()",
        "body": [
            "uni.arrayBufferToBase64(${1:arrayBuffer});$0"
        ],
        "description": "uni-ArrayBuffer转Base64"
    },
    "uni-发起网络请求": {
        "prefix": "uni.request()",
        "body": [
            "uni.request({",
            "\turl: '${1:https://www.example.com}', // 请求地址",
            "\tdata: {",
            "\t\t${2:name:'user'}",
            "\t},",
            "\theader: {",
            "\t\t${3:'token':'abc'}",
            "\t},",
            "\tsuccess: (res) => {",
            "\t\tconsole.log(res);",
            "\t\t$4",
            "\t}",
            "});$0"
        ],
        "description": "uni-发起网络请求"
    },
    "uni-选择图片": {
        "prefix": "uni.chooseImage()",
        "body": [
            "uni.chooseImage({",
            "\tsuccess: (chooseImageRes) => {",
            "\t\tconst tempFilePaths = chooseImageRes.tempFilePaths;",
            "\t\tuni.uploadFile({",
            "\t\t\turl: '${1:https://www.example.com/upload}', // 图片上传地址",
            "\t\t\tfilePath: ${2:tempFilePaths[${3:0}]},",
            "\t\t\tname: 'file',",
            "\t\t\tformData: {",
            "\t\t\t\t${4:name: 'user'}",
            "\t\t\t},",
            "\t\t\tsuccess: (uploadFileRes) => {",
            "\t\t\t\tconsole.log(uploadFileRes.data);",
            "\t\t\t}",
            "\t\t});",
            "\t}",
            "});$0"
        ],
        "description": "uni-选择图片"
    },
    "uni-上传文件": {
        "prefix": "uni.uploadFile()",
        "body": [
            "uni.uploadFile({",
            "\turl: '${1:https://www.example.com/upload}', // 文件上传地址",
            "\tfilePath: ${2:tempFilePaths[0]},",
            "\tname: 'file',",
            "\tformData: {",
            "\t\t${3:name: 'user'}",
            "\t},",
            "\tsuccess: (uploadFileRes) => {",
            "\t\tconsole.log(uploadFileRes.data);",
            "\t\t$4",
            "\t}",
            "});$0"
        ],
        "description": "uni-上传文件"
    },
    "uni-下载文件": {
        "prefix": "uni.downloadFile()",
        "body": [
            "uni.downloadFile({",
            "\turl: '${1:https://www.example.com/file/test}', // 下载地址",
            "\tsuccess: (res) => {",
            "\t\tif (res.statusCode === 200) {",
            "\t\t\tconsole.log('下载成功');",
            "\t\t\t$2",
            "\t\t}",
            "\t}",
            "});$0"
        ],
        "description": "uni-下载文件"
    },
    "uni-创建一个 WebSocket 连接": {
        "prefix": "uni.connectSocket()",
        "body": [
            "uni.connectSocket({",
            "\turl: '${1:wss://www.example.com/socket}', // ws 地址",
            "\tdata() {",
            "\t\treturn {",
            "\t\t\t${2:data: ''}",
            "\t\t};",
            "\t},",
            "\theader: {",
            "\t\t'content-type': 'application/json'",
            "\t},",
            "\tprotocols: ['protocol1'],",
            "\tmethod: 'GET'",
            "});$0"
        ],
        "description": "uni-创建一个 WebSocket 连接"
    },
    "uni-监听WebSocket连接打开事件": {
        "prefix": "uni.onSocketOpen()",
        "body": [
            "uni.onSocketOpen(function (res) {",
            "\tconsole.log('WebSocket连接已打开！');",
            "\t$1",
            "});$0"
        ],
        "description": "uni-监听WebSocket连接打开事件"
    },
    "uni-监听WebSocket错误": {
        "prefix": "uni.onSocketError()",
        "body": [
            "uni.onSocketError(function (res) {",
            "\tconsole.log('WebSocket连接出错！');",
            "\t$1",
            "});$0"
        ],
        "description": "uni-监听WebSocket错误"
    },
    "uni-监听WebSocket接受到服务器的消息事件": {
        "prefix": "uni.onSocketMessage()",
        "body": [
            "uni.onSocketMessage(function (res) {",
            "\tconsole.log('收到服务器内容：' + res.data);",
            "\t$1",
            "});$0"
        ],
        "description": "uni-监听WebSocket接受到服务器的消息事件"
    },
    "uni-WebSocket发送数据": {
        "prefix": "uni.sendSocketMessage()",
        "body": [
            "uni.sendSocketMessage({",
            "\tdata: ${1:msg}",
            "});$0"
        ],
        "description": "uni-WebSocket发送数据"
    },
    "uni-关闭 WebSocket 连接": {
        "prefix": "uni.closeSocket()",
        "body": [
            "uni.closeSocket();"
        ],
        "description": "uni-关闭 WebSocket 连接"
    },
    "uni-监听WebSocket关闭": {
        "prefix": "uni.onSocketClose()",
        "body": [
            "uni.onSocketClose(function (res) {",
                "\tconsole.log('WebSocket 已关闭！');",
                "\t$1",
            "});$0"
        ],
        "description": "uni-监听WebSocket关闭"
    },
    "uni-跳转到应用内的某个页面": {
        "prefix": "uni.navigateTo()",
        "body": [
            "uni.navigateTo({",
                "\turl: '${1:test?id=1&name=uniapp}'",
            "});$0"
        ],
        "description": "uni-跳转到应用内的某个页面"
    },
    "uni-关闭当前页面跳转到应用内的某个页面": {
        "prefix": "uni.redirectTo()",
        "body": [
            "uni.redirectTo({",
                "\turl: '${1:test?id=1&name=uniapp}'",
            "});$0"
        ],
        "description": "uni-关闭当前页面跳转到应用内的某个页面"
    },
    "uni-关闭所有页面，打开到应用内的某个页面": {
        "prefix": "uni.reLaunch()",
        "body": [
            "uni.reLaunch({",
                "\turl: '${1:test?id=1&name=uniapp}'",
            "});$0"
        ],
        "description": "uni-关闭所有页面，打开到应用内的某个页面"
    },
    "uni-跳转到 tabBar 页面，并关闭其他所有非 tabBar 页面": {
        "prefix": "uni.switchTab()",
        "body": [
            "uni.switchTab({",
                "\turl: '${1:/pages/index/index}'",
            "});$0"
        ],
        "description": "uni-跳转到 tabBar 页面，并关闭其他所有非 tabBar 页面"
    },
    "uni-关闭当前页面，返回上一页面或多级页面": {
        "prefix": "uni.navigateBack()",
        "body": [
            "uni.navigateBack({",
                "\tdelta: ${1:1}",
            "});$0"
        ],
        "description": "uni-关闭当前页面，返回上一页面或多级页面"
    },
    "uni-将数据存储在本地缓存中指定的 key 中,异步接口": {
        "prefix": "uni.setStorage()",
        "body": [
            "uni.setStorage({",
                "\tkey: '${1:storage_key}',",
                "\tdata: '${2:hello}',",
                "\tsuccess: function () {",
                    "\t\tconsole.log('success');",
                    "\t\t$3",
                "\t}",
            "});$0"
        ],
        "description": "uni-将数据存储在本地缓存中指定的 key 中"
    },
    "uni-将 data 存储在本地缓存中指定的 key 中,同步接口": {
        "prefix": "uni.setStorageSync()",
        "body": [
            "uni.setStorageSync('${1:storage_key}', '${2:hello}');$0"
        ],
        "description": "uni-将 data 存储在本地缓存中指定的 key 中"
    },
    "uni-从本地缓存中异步获取指定 key 对应的内容": {
        "prefix": "uni.getStorage()",
        "body": [
            "uni.getStorage({",
                "\tkey: '${1:storage_key}',",
                "\tsuccess: function (res) {",
                    "\t\tconsole.log(res);",
                    "\t\t$2",
                "\t}",
            "});$0"
        ],
        "description": "uni-从本地缓存中异步获取指定 key 对应的内容"
    },
    "uni-从本地缓存中同步获取指定 key 对应的内容": {
        "prefix": "uni.getStorageSync()",
        "body": [
            "uni.getStorageSync('${1:storage_key}');$0"
        ],
        "description": "uni-从本地缓存中同步获取指定 key 对应的内容"
    },
    "uni-异步获取当前 storage 的相关信息": {
        "prefix": "uni.getStorageInfo()",
        "body": [
            "uni.getStorageInfo({",
                "\tsuccess: function (res) {",
                    "\tconsole.log(res.keys);",
                    "\tconsole.log(res.currentSize);",
                    "\tconsole.log(res.limitSize);",
                    "\t$1",
                "\t}",
            "});$0"
        ],
        "description": "uni-异步获取当前 storage 的相关信息"
    },
    "uni-同步获取当前 storage 的相关信息": {
        "prefix": "uni.getStorageInfoSync()",
        "body": [
            "uni.getStorageInfoSync();$0"
        ],
        "description": "uni-同步获取当前 storage 的相关信息"
    },
    "uni-从本地缓存中异步移除指定 key": {
        "prefix": "uni.removeStorage()",
        "body": [
            "uni.removeStorage({",
                "\tkey: 'storage_key',",
                "\tsuccess: function (res) {",
                    "\t\tconsole.log('success');",
                    "\t\t$1",
                "\t}",
            "});$0"
        ],
        "description": "uni-从本地缓存中异步移除指定 key"
    },
    "uni-从本地缓存中同步移除指定 key。": {
        "prefix": "uni.removeStorageSync()",
        "body": [
            "uni.removeStorageSync('$1');$0"
        ],
        "description": "uni-从本地缓存中同步移除指定 key。"
    },
    "uni-清理本地数据缓存": {
        "prefix": "uni.clearStorage()",
        "body": [
            "uni.clearStorage();"
        ],
        "description": "uni-清理本地数据缓存"
    },
    "uni-同步清理本地数据缓存": {
        "prefix": "uni.clearStorage()",
        "body": [
            "uni.clearStorage();"
        ],
        "description": "uni-同步清理本地数据缓存"
    },
    "uni-获取当前的地理位置": {
        "prefix": "uni.getLocation()",
        "body": [
            "uni.getLocation({",
                "\ttype: 'wgs84',",
                "\tsuccess: function (res) {",
                    "\t\tconsole.log('当前位置的经度：' + res.longitude);",
                    "\t\tconsole.log('当前位置的纬度：' + res.latitude);",
                    "\t\t$1",
                "\t}",
            "});$0"
        ],
        "description": "uni-获取当前的地理位置"
    },
    "uni-打开地图选择位置": {
        "prefix": "uni.chooseLocation()",
        "body": [
            "uni.chooseLocation({",
                "\tsuccess: function (res) {",
                    "\t\tconsole.log('位置名称：' + res.name);",
                    "\t\tconsole.log('详细地址：' + res.address);",
                    "\t\tconsole.log('纬度：' + res.latitude);",
                    "\t\tconsole.log('经度：' + res.longitude);",
                    "\t\t$1",
                "\t}",
            "});$0"
        ],
        "description": "uni-打开地图选择位置"
    },
    "uni-使用应用内置地图查看位置": {
        "prefix": "uni.getLocation()",
        "body": [
            "uni.getLocation({",
                "\ttype: 'gcj02', //返回可以用于uni.openLocation的经纬度",
                "\tsuccess: function (res) {",
                    "\t\tconst latitude = res.latitude;",
                    "\t\tconst longitude = res.longitude;",
                    "\t\tuni.openLocation({",
                        "\t\t\tlatitude: latitude,",
                        "\t\t\tlongitude: longitude,",
                        "\t\t\tsuccess: function () {",
                            "\t\t\t\tconsole.log('success');",
                            "\t\t\t\t$1",
                        "\t\t\t}",
                    "\t\t});",
                "\t}",
            "});$0"
        ],
        "description": "uni-使用应用内置地图查看位置"
    },
    "uni-预览图片": {
        "prefix": "uni.previewImage()",
        "body": [
            "uni.previewImage({",
                "\turls: res.tempFilePaths,",
                "\tlongPressActions: {",
                    "\t\titemList: ['发送给朋友', '保存图片', '收藏'],",
                    "\t\tsuccess: function(data) {",
                        "\t\t\tconsole.log('选中了第' + (data.tapIndex + 1) + '个按钮,第' + (data.index + 1) + '张图片');",
                        "\t\t\t$1",
                    "\t\t},",
                    "\t\tfail: function(err) {",
                        "\t\t\tconsole.log(err.errMsg);",
                        "\t\t\t$2",
                    "\t\t}",
                "\t}",
            "});$0"
        ],
        "description": "uni-预览图片"
    },
    "uni-获取图片信息": {
        "prefix": "uni.getImageInfo()",
        "body": [
            "uni.getImageInfo({",
                "\tsrc: ${1:res.tempFilePaths[0]},",
                "\tsuccess: function (image) {",
                    "\t\tconsole.log(image.width);",
                    "\t\tconsole.log(image.height);",
                    "\t\t$2",
                "\t}",
            "});$0"
        ],
        "description": "uni-获取图片信息"
    },
    "uni-保存图片到系统相册": {
        "prefix": "uni.saveImageToPhotosAlbum()",
        "body": [
            "uni.saveImageToPhotosAlbum({",
                "\tfilePath: res.tempFilePaths[0],",
                "\tsuccess: function () {",
                    "\t\tconsole.log('save success');",
                    "\t\t$1",
                "\t}",
            "});$0"
        ],
        "description": "uni-保存图片到系统相册"
    },
    "uni-压缩图片接口，可选压缩质量": {
        "prefix": "uni.compressImage()",
        "body": [
            "uni.compressImage({",
                "\tsrc: '/static/logo.jpg',",
                "\tquality: ${1:80}, // 图片质量 0-100",
                "\tsuccess: res => {",
                    "\t\tconsole.log(res.tempFilePath)",
                    "\t\t$2",
                "\t}",
            "});$0"
        ],
        "description": "uni-压缩图片接口，可选压缩质量"
    },
    "uni-获取全局唯一的录音管理器 recorderManager": {
        "prefix": "uni.getRecorderManager()",
        "body": [
            "const recorderManager = uni.getRecorderManager(); // 其他详细请查看官方文档 https://uniapp.dcloud.io/api/media/record-manager"
        ],
        "description": "uni-获取全局唯一的录音管理器 recorderManager"
    },
    "uni-获取全局唯一的背景音频管理器 backgroundAudioManager": {
        "prefix": "uni.getBackgroundAudioManager()",
        "body": [
            "uni.getBackgroundAudioManager(); // 其他详细请查看官方文档 https://uniapp.dcloud.io/api/media/background-audio-manager$0"
        ],
        "description": "uni-获取全局唯一的背景音频管理器 backgroundAudioManager"
    },
    "uni-创建并返回内部 audio 上下文 innerAudioContext 对象": {
        "prefix": "uni.createInnerAudioContext()",
        "body": [
            "const innerAudioContext = uni.createInnerAudioContext();",
            "innerAudioContext.autoplay = true;",
            "innerAudioContext.src = '${1:https://img-cdn-qiniu.dcloud.net.cn/uniapp/audio/music.mp3}';",
            "innerAudioContext.onPlay(() => {",
                "\tconsole.log('开始播放');",
                "\t$2",
            "});",
            "innerAudioContext.onError((res) => {",
                "\tconsole.log(res.errMsg);",
                "\tconsole.log(res.errCode);",
                "\t$3",
            "});$0"
        ],
        "description": "uni-创建并返回内部 audio 上下文 innerAudioContext 对象"
    },
    "uni-拍摄视频或从手机相册中选视频": {
        "prefix": "uni.chooseVideo()",
        "body": [
            "uni.chooseVideo({",
                "\tcount: 1,",
                "\tsourceType: ['camera', 'album'],",
                "\tsuccess: function (res) {",
                    "\t\tself.src = res.tempFilePath;",
                    "\t\t$1",
                "\t}",
            "});$0"
        ],
        "description": "uni-拍摄视频或从手机相册中选视频"
    },
    "uni-保存视频到系统相册": {
        "prefix": "uni.saveVideoToPhotosAlbum()",
        "body": [
            "uni.saveVideoToPhotosAlbum({",
                "\tfilePath: res.tempFilePath,",
                "\tsuccess: function () {",
                    "\t\tconsole.log('save success');",
                    "\t\t$1",
                "\t}",
            "});$0"
        ],
        "description": "uni-保存视频到系统相册"
    },
    "uni-创建并返回 video 上下文 videoContext 对象": {
        "prefix": "uni.createVideoContext(videoId, this)",
        "body": [
            "this.videoContext = uni.createVideoContext('myVideo'); // 更多请查找官方文档https://uniapp.dcloud.io/api/media/video-context"
        ],
        "description": "uni-创建并返回 video 上下文 videoContext 对象"
    },
    "uni-创建并返回 camera 组件的上下文 cameraContext 对象": {
        "prefix": "uni.createCameraContext()",
        "body": [
            "uni.createCameraContext(); // 更多请查找官方文档https://uniapp.dcloud.io/api/media/camera-context"
        ],
        "description": "uni-创建并返回 camera 组件的上下文 cameraContext 对象"
    },
    "uni-": {
        "prefix": "uni.createLivePlayerContext(livePlayerId, this)",
        "body": [
            "uni.createLivePlayerContext(livePlayerId, this); // 更多请查找官方文档https://uniapp.dcloud.io/api/media/live-player-context?id=createliveplayercontext"
        ],
        "description": "uni-"
    },
    "uni-创建 live-pusher 上下文 livePusherContext 对象": {
        "prefix": "uni.createLivePusherContext(livePusherId, this)",
        "body": [
            "uni.createLivePusherContext(livePusherId, this); // 更多请查找官方文档https://uniapp.dcloud.io/api/media/live-player-context?id=createliveplayercontext"
        ],
        "description": "uni-创建 live-pusher 上下文 livePusherContext 对象"
    },
    "uni-获取系统信息": {
        "prefix": "uni.getSystemInfo(OBJECT)",
        "body": [
            "uni.getSystemInfo({",
                "\tsuccess: function (res) {",
                    "\t\tconsole.log(res.model);",
                    "\t\tconsole.log(res.pixelRatio);",
                    "\t\tconsole.log(res.windowWidth);",
                    "\t\tconsole.log(res.windowHeight);",
                    "\t\tconsole.log(res.language);",
                    "\t\tconsole.log(res.version);",
                    "\t\tconsole.log(res.platform);",
                    "\t\t$1",
                "\t}",
            "});$0"
        ],
        "description": "uni-获取系统信息"
    },
    "uni-获取系统信息同步接口": {
        "prefix": "uni.getSystemInfoSync()",
        "body": [
            "const res = uni.getSystemInfoSync();",
            "console.log(res.model);",
            "console.log(res.pixelRatio);",
            "console.log(res.windowWidth);",
            "console.log(res.windowHeight);",
            "console.log(res.language);",
            "console.log(res.version);",
            "console.log(res.platform);"
        ],
        "description": "uni-获取系统信息同步接口"
    },
    "uni-判断应用的 API，回调，参数，组件等是否在当前版本可用": {
        "prefix": "uni.canIUse(String)",
        "body": [
            "uni.canIUse('getSystemInfoSync.return.screenWidth');",
            "uni.canIUse('getSystemInfo.success.screenWidth');",
            "uni.canIUse('showToast.object.image');",
            "uni.canIUse('request.object.method.GET');",
            "uni.canIUse('live-player');",
            "uni.canIUse('text.selectable');",
            "uni.canIUse('button.open-type.contact');"
        ],
        "description": "uni-判断应用的 API，回调，参数，组件等是否在当前版本可用"
    },
    "uni-监听内存不足告警事件": {
        "prefix": "uni.onMemoryWarning()",
        "body": [
            "uni.onMemoryWarning(function (){",
                "\tconsole.log('onMemoryWarningReceive')$0",
                "\t$1",
            "});$0"
        ],
        "description": "uni-监听内存不足告警事件"
    },
    "uni-获取网络类型": {
        "prefix": "uni.getNetworkType(OBJECT)",
        "body": [
            "uni.getNetworkType({",
                "\tsuccess: function (res) {",
                    "\t\tconsole.log(res.networkType);",
                    "\t\t$1",
                "\t}",
            "});$0"
        ],
        "description": "uni-获取网络类型"
    },
    "uni-监听网络状态变化": {
        "prefix": "uni.onNetworkStatusChange()",
        "body": [
            "uni.onNetworkStatusChange(function (res) {",
                "\tconsole.log(res.isConnected);",
                "\tconsole.log(res.networkType);",
                "\t$1",
            "});$0"
        ],
        "description": "uni-"
    },
    "uni-监听加速度数据": {
        "prefix": "uni.onAccelerometerChange(CALLBACK)",
        "body": [
            "uni.onAccelerometerChange(function (res) {",
                "\tconsole.log(res.x);",
                "\tconsole.log(res.y);",
                "\tconsole.log(res.z);",
                "\t$1",
            "});$0"
        ],
        "description": "uni-监听加速度数据"
    },
    "uni-开始监听加速度数据": {
        "prefix": "uni.startAccelerometer()",
        "body": [
            "uni.startAccelerometer();"
        ],
        "description": "uni-开始监听加速度数据"
    },
    "uni-停止监听加速度数据": {
        "prefix": "uni.stopAccelerometer()",
        "body": [
            "uni.stopAccelerometer();"
        ],
        "description": "uni-停止监听加速度数据"
    },
    "uni-监听罗盘数据": {
        "prefix": "uni.onCompassChange(CALLBACK)",
        "body": [
            "uni.onCompassChange(function (res) {",
                "\tconsole.log(res.direction);",
                "\t$1",
            "});$0 // 更多关于设备api请访问官方文档https://uniapp.dcloud.io/api/system/gyroscope?id=ongyroscopechange"
        ],
        "description": "uni-监听罗盘数据"
    },
    "uni-开始监听罗盘数据": {
        "prefix": "uni.startCompass(OBJECT)",
        "body": [
            "uni.startCompass(); // 更多关于设备api请访问官方文档https://uniapp.dcloud.io/api/system/gyroscope?id=ongyroscopechange"
        ],
        "description": "uni-开始监听罗盘数据"
    },
    "uni-停止监听罗盘数据": {
        "prefix": "uni.stopCompass()",
        "body": [
            "uni.stopCompass(); // 更多关于设备api请访问官方文档https://uniapp.dcloud.io/api/system/gyroscope?id=ongyroscopechange"
        ],
        "description": "uni-停止监听罗盘数据"
    },
    "uni-监听陀螺仪数据变化事件": {
        "prefix": "uni.onGyroscopeChange()",
        "body": [
            "uni.onGyroscopeChange(${1:CALLBACK});$0 // 更多关于设备api请访问官方文档https://uniapp.dcloud.io/api/system/gyroscope?id=ongyroscopechange"
        ],
        "description": "uni-监听陀螺仪数据变化事件"
    },
    "uni-显示消息提示框": {
        "prefix": "uni.showToast()",
        "body": [
            "uni.showToast({",
                "\ttitle: '${1:标题}',",
                "\ticon: '${2:none}',",
                "\tduration: ${3:2000}",
            "});$0"
        ],
        "description": "uni-显示消息提示框"
    },
    "uni-隐藏消息提示框": {
        "prefix": "uni.hideToast()",
        "body": [
            "uni.hideToast();"
        ],
        "description": "uni-隐藏消息提示框"
    },
    "uni-显示 loading 提示框": {
        "prefix": "uni.showLoading()",
        "body": [
            "uni.showLoading({",
                "\ttitle: '${1:加载中}'",
                "\ticon: 'none'",
            "});$0"
        ],
        "description": "uni-显示 loading 提示框"
    },
    "uni-隐藏 loading 提示框": {
        "prefix": "uni.hideLoading()",
        "body": [
            "uni.hideLoading();"
        ],
        "description": "uni-隐藏 loading 提示框"
    },
    "uni-显示模态弹窗": {
        "prefix": "uni.showModal()",
        "body": [
            "uni.showModal({",
                "\ttitle: '${1:提示}',",
                "\tcontent: '${2:这是一个模态弹窗}',",
                "\tsuccess: function (res) {",
                    "\t\tif (res.confirm) {",
                        "\t\t\tconsole.log('用户点击确定');",
                        "\t\t\t$3",
                    "\t\t} else if (res.cancel) {",
                        "\t\t\tconsole.log('用户点击取消');",
                        "\t\t\t$4",
                    "\t\t}",
                "\t}",
            "});$0"
        ],
        "description": "uni-显示模态弹窗"
    },
    "uni-​显示操作菜单": {
        "prefix": "uni.showActionSheet()",
        "body": [
            "uni.showActionSheet({",
                "\titemList: ['${1:A}', '${2:B}', '${3:C}'],",
                "\tsuccess: function (res) {",
                    "\t\tconsole.log('选中了第' + (res.tapIndex + 1) + '个按钮');",
                    "\t\t$4",
                "\t},",
                "\tfail: function (res) {",
                    "\t\tconsole.log(res.errMsg);",
                    "\t\t$5",
                "\t}",
            "});$0"
        ],
        "description": "uni-​显示操作菜单"
    },
    "uni-动态设置当前页面的标题": {
        "prefix": "uni.setNavigationBarTitle()",
        "body": [
            "uni.setNavigationBarTitle({",
                "\ttitle: '${1:新的标题}'",
            "});$0"
        ],
        "description": "uni-动态设置当前页面的标题"
    },

    "uni-设置页面导航条颜色": {
        "prefix": "uni.setNavigationBarColor()",
        "body": [
            "uni.setNavigationBarColor({",
                "\tfrontColor: '${1:#ffffff}',",
                "\tbackgroundColor: '${2:#ff0000}',",
                "\tanimation: {",
                    "\t\tduration: ${3:400},",
                    "\t\ttimingFunc: '${4:easeIn}'",
                "\t}",
            "});$0"
        ],
        "description": "uni-设置页面导航条颜色"
    },
    "uni-在当前页面显示导航条加载动画": {
        "prefix": "uni.showNavigationBarLoading()",
        "body": [
            "uni.showNavigationBarLoading();"
        ],
        "description": "uni-在当前页面显示导航条加载动画"
    },
    "uni-在当前页面隐藏导航条加载动画": {
        "prefix": "uni.hideNavigationBarLoading()",
        "body": [
            "uni.hideNavigationBarLoading();"
        ],
        "description": "uni-在当前页面隐藏导航条加载动画"
    },
    "uni-动态设置 tabBar 某一项的内容": {
        "prefix": "uni.setTabBarItem()",
        "body": [
            "uni.setTabBarItem({",
                "\tindex: {1:0},",
                "\ttext: '${2:名称}',",
                "\ticonPath: '${3:/path/to/iconPath}',",
                "\tselectedIconPath: '${4:/path/to/selectedIconPath}'",
            "});$0"
        ],
        "description": "uni-动态设置 tabBar 某一项的内容"
    },
    "uni-动态设置 tabBar 的整体样式": {
        "prefix": "uni.setTabBarStyle()",
        "body": [
            "uni.setTabBarStyle({",
                "\tcolor: '${1:#FF0000}',",
                "\tselectedColor: '${2:#00FF00}',",
                "\tbackgroundColor: '${3:0000FF}',",
                "\tborderStyle: '${4:white}'",
            "});$0"
        ],
        "description": "uni-动态设置 tabBar 的整体样式"
    },
    "uni-隐藏 tabBar": {
        "prefix": "uni.hideTabBar()",
        "body": [
            "uni.hideTabBar();"
        ],
        "description": "uni-隐藏 tabBar"
    },
    "uni-显示 tabBar": {
        "prefix": "uni.showTabBar()",
        "body": [
            "uni.showTabBar();"
        ],
        "description": "uni-显示 tabBar"
    },
    "uni-为 tabBar 某一项的右上角添加文本": {
        "prefix": "uni.setTabBarBadge()",
        "body": [
            "uni.setTabBarBadge({",
                "index: ${1:0},",
                "text: '${2:99}'",
            "});$0"
        ],
        "description": "uni-为 tabBar 某一项的右上角添加文本"
    },
    "uni-移除 tabBar 某一项右上角的文本": {
        "prefix": "uni.removeTabBarBadge()",
        "body": [
            "uni.removeTabBarBadge({",
                "index: ${1:0},",
            "});$0"
        ],
        "description": "uni-移除 tabBar 某一项右上角的文本"
    },
    "uni-显示 tabBar 某一项的右上角的红点": {
        "prefix": "uni.showTabBarRedDot(OBJECT)",
        "body": [
            "uni.showTabBarRedDot({",
                "index: ${1:0},",
            "});$0"
        ],
        "description": "uni-显示 tabBar 某一项的右上角的红点"
    },
    "uni-隐藏 tabBar 某一项的右上角的红点": {
        "prefix": "uni.hideTabBarRedDot(OBJECT)",
        "body": [
            "uni.hideTabBarRedDot({",
                "index: ${1:0},",
            "});$0"
        ],
        "description": "uni-隐藏 tabBar 某一项的右上角的红点"
    },
    "uni-动态设置窗口的背景色": {
        "prefix": "uni.setBackgroundColor()",
        "body": [
            "uni.setBackgroundColor({",
                "\tbackgroundColor: '${1:#000000}'",
                "\backgroundColorTop: '${2:#ffffff}'",
                "\backgroundColorBottom: '${3:#ffffff}'",
            "});$0"
        ],
        "description": "uni-动态设置窗口的背景色"
    },
    "uni-动态设置下拉背景字体、loading 图的样式": {
        "prefix": "uni.setBackgroundTextStyle()",
        "body": [
            "uni.setBackgroundTextStyle({",
                "\ttextStyle: '${1:dark}' // 下拉背景字体、loading 图的样式为dark",
                "\t$2",
            "});$0"
        ],
        "description": "uni-动态设置下拉背景字体、loading 图的样式"
    },
    "uni-创建一个动画实例 animation": {
        "prefix": "uni.createAnimation()",
        "body": [
            "var animation = uni.createAnimation({",
                "\ttransformOrigin: '${1:50% 50%}',",
                "\tduration: ${2:1000},",
                "\ttimingFunction: '${3:ease}',",
                "\tdelay: ${4:ease}",
            "}); // 官方文档https://uniapp.dcloud.io/api/ui/animation?id=createanimation"
        ],
        "description": "uni-创建一个动画实例 animation"
    },
    "uni-将页面滚动到目标位置": {
        "prefix": "uni.pageScrollTo()",
        "body": [
            "uni.pageScrollTo({",
                "\tscrollTop: ${1:0},",
                "\tduration: ${2:300}",
            "});$0"
        ],
        "description": "uni-将页面滚动到目标位置"
    },
    
    "uni-监听窗口尺寸变化事件": {
        "prefix": "uni.onWindowResize()",
        "body": [
            "uni.onWindowResize((res) => {",
                "\tconsole.log('变化后的窗口宽度=' + res.size.windowWidth)",
                "\tconsole.log('变化后的窗口高度=' + res.size.windowHeight)",
                "\t$1",
            "});$0"
        ],
        "description": "uni-监听窗口尺寸变化事件"
    },
    "uni-取消监听窗口尺寸变化事件": {
        "prefix": "uni.offWindowResize()",
        "body": [
            "uni.offWindowResize(() => {",
                "\tconsole.log('取消监听窗口尺寸变化事件');",
                "$1",
            "});$0"
        ],
        "description": "uni-取消监听窗口尺寸变化事件"
    },
    "uni-动态加载字体": {
        "prefix": "uni.loadFontFace()",
        "body": [
            "uni.loadFontFace({",
                "\tfamily: '${1:Bitstream Vera Serif Bold}',",
                "\tsource: 'url($2)',",
                "\tsuccess() {",
                    "\t\tconsole.log('success')",
                    "\t\t$3",
                "\t}",
            "});$0"
        ],
        "description": "uni-动态加载字体"
    },
    "uni-函数用于获取当前页面栈的实例": {
        "prefix": "getCurrentPages()",
        "body": [
            "getCurrentPages(); // 关于获取页面的官方文档https://uniapp.dcloud.io/api/window/window"
        ],
        "description": "uni-函数用于获取当前页面栈的实例"
    },
    "uni-保存文件到本地": {
        "prefix": "uni.saveFile()",
        "body": [
            "uni.saveFile({",
                "\ttempFilePath: ${0:tempFilePaths[0]},",
                "\tsuccess: function (res) {",
                   "\t\tlet savedFilePath = res.savedFilePath;",
                   "\t\t$1",
                "\t}",
            "});$0"
        ],
        "description": "uni-保存文件到本地"
    },
    "uni-获取本地已保存的文件列表": {
        "prefix": "uni.getSavedFileList()",
        "body": [
            "uni.getSavedFileList({",
                "\tsuccess: function (res) {",
                    "\t\tconsole.log(res.fileList);",
                    "\t\t$1",
                "\t}",
            "});$0"
        ],
        "description": "uni-获取本地已保存的文件列表"
    },
    "uni-获取本地文件的文件信息": {
        "prefix": "uni.getSavedFileInfo()",
        "body": [
            "uni.getSavedFileInfo({",
                "\tfilePath: '${0:unifile://somefile}', // 本地文件路径",
                "\tsuccess: function (res) {",
                    "\t\tconsole.log(res.size);",
                    "\t\tconsole.log(res.createTime);",
                    "\t\t$1",
                "\t}",
            "});$0"
        ],
        "description": "uni-获取本地文件的文件信息"
    }, 
    "uni-删除本地存储的文件": {
        "prefix": "uni.removeSavedFile()",
        "body": [
            "uni.removeSavedFile({",
                "\tfilePath: ${0:res.fileList[0].filePath},",
                "\tcomplete: function (res) {",
                    "\t\tconsole.log(res);",
                    "\t\t$1",
                "\t}",
            "});$0"
        ],
        "description": "uni-删除本地存储的文件"
    }, 
    "uni-获取文件信息": {
        "prefix": "uni.getFileInfo()",
        "body": [
            "uni.getFileInfo({",
                "\tfilePath: ${1:res.fileList[0].filePath},",
            "});$0"
        ],
        "description": "uni-获取文件信息"
    }, 
    "uni-新开页面打开文档,支持格式：doc, xls, ppt, pdf, docx, xlsx, pptx。": {
        "prefix": "openDocument()",
        "body": [
            "openDocument({",
                "\tfilePath: filePath,",
                "\tsuccess: function (res) {",
                    "\t\tconsole.log('打开文档成功');",
                    "\t\t$1",
                "\t})",
            "});$0"
        ],
        "description": "uni-新开页面打开文档"
    }
}